pipeline {
    agent any

    environment {
        IMAGE_NAME = 'kubernates'
        DOCKERHUB_REPO = 'rakesh994/coinbase'
        MANIFEST_PATH = 'deployment.yaml'
        YQ_BIN = "${WORKSPACE}/.yq-bin/yq"
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/Rakesh-k-ops/java-war-repo.git'
            }
        }

        stage('Build Java Application') {
            steps {
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${IMAGE_NAME} ."
            }
        }

        stage('Login to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                }
            }
        }

        stage('Tag & Push Docker Image') {
            steps {
                script {
                    def commitHash = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
                    def imageTag = "${DOCKERHUB_REPO}:${commitHash}"
                    env.FULL_IMAGE = imageTag
                    sh """
                        docker tag ${IMAGE_NAME}:latest ${imageTag}
                        docker push ${imageTag}
                    """
                }
            }
        }

        stage('Install yq Locally') {
            steps {
                sh '''
                    mkdir -p .yq-bin
                    curl -L https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -o .yq-bin/yq
                    chmod +x .yq-bin/yq
                '''
            }
        }

        stage('Update Deployment YAML') {
    steps {
        withCredentials([usernamePassword(credentialsId: 'github-creds', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASS')]) {
            sh '''
                git config --global user.email "rakeshkdevoops001@gmail.com"
                git config --global user.name "Rakesh-k-ops"

                echo "Updating deployment.yaml with new image"
                ./.yq-bin/yq eval ".spec.template.spec.containers[0].image = \\"${FULL_IMAGE}\\"" -i deployment.yaml

                git add deployment.yaml
                git commit -m "Update image to ${FULL_IMAGE}"
                git push https://${GIT_USER}:${GIT_PASS}@github.com/Rakesh-k-ops/java-war-repo.git HEAD:main
            '''
        }
    }
}

    }
}
